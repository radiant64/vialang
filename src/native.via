(begin
  (syntax-transform set-proc! (&proc-name &proc-formals &proc-body)
                    (quote (set! &proc-name (lambda &proc-formals &proc-body))))

  (syntax-transform for-each (&list &var &body)
                   (quote (begin
                            (set! l (lambda (&var) &body))
                            (set-proc! iterate (head tail)
                                       (if (nil? tail)
                                         (cons (l head) ())
                                         (cons (l head)
                                               (iterate (car tail)
                                                        (cdr tail)))))
                            (iterate (car &list) (cdr &list)))))

  (set-proc! cadr (pair)
             (car (cdr pair)))

  (set-proc! caddr (pair)
             (car (cdr (cdr pair))))

  (set-proc! cadddr (pair)
             (car (cdr (cdr (cdr pair)))))

  (set-proc! cdar (pair)
             (cdr (car pair)))

  (set-proc! cddar (pair)
             (cdr (cdr (car pair))))

  (set-proc! cdddar (pair)
             (cdr (cdr (cdr (car pair)))))

  (set-proc! cadar (pair)
             (car (cdr (car pair))))

  (set-proc! cdadr (pair)
             (cdr (car (cdr pair)))))

